import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;

import javax.swing.JComponent;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rabbit
 */

public class hext extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     * @throws IOException 
     */
    public hext() throws IOException {
        initComponents();
        
        getContentPane().setCursor(new Cursor(WAIT_CURSOR));
     
     hex.setForeground(Color.blue);
     decimal.setForeground(Color.red);
     octet.setForeground(Color.blue);
     binary.setForeground(Color.red);
     setTitle("HEX-BIN-DEC-OCT");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        decimal = new javax.swing.JTextField();
        hex = new javax.swing.JTextField();
        octet = new javax.swing.JTextField();
        binary = new javax.swing.JTextField();
        
        jLabel3.setFont(new Font("verdana",2,16));
        jLabel4.setFont(new Font("verdana",2,16));
        jLabel5.setFont(new Font("verdana",2,16));
        jLabel6.setFont(new Font("verdana",2,16));
        
        decimal.setFont(new Font("Monotype corsiva",2,18));
        octet.setFont(new Font("Monotype corsiva",2,18));
        hex.setFont(new Font("Monotype corsiva",2,18));
        binary.setFont(new Font("Monotype corsiva",2,18));
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jLabel3.setText("DECIMAL");

        jLabel4.setText("HEX");

        jLabel5.setText("BINARY");

        jLabel6.setText("OCTET");

     
        decimal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deckey(evt);
            }
        });

   
        hex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hexkey(evt);
            }
        });

      
        octet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                octetkey(evt);
            }
        });

        binary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                binarykey(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(octet, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(binary, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hex, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hex, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(binary, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(octet, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(decimal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void deckey(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
    	String val=decimal.getText();
    	generateD(val);
    }

    private void generateD(String val) {
		// TODO Auto-generated method stub
    	String d,o,h,b; 
    	long de;
    	try{
    	de=Long.parseLong(val);
    	d=val;
    	h=Long.toHexString(de).toUpperCase();
    	b=Long.toBinaryString(de);
    	o=Long.toOctalString(de);
    	octet.setText(o);
    	hex.setText(h);
    	binary.setText(b);
    	}catch(Exception e){}
    	
		
	}

	private void hexkey(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
    	String val=hex.getText();
    	generateH(val);
    	
    }

    private void generateH(String val) {
		// TODO Auto-generated method stub
    	String d,o,h,b; 
    	long de;
    	try{
    		de=Long.valueOf(val, 16);//.toString();
    		o=Long.toOctalString(de);
    		b=Long.toBinaryString(de);
    		d=Long.valueOf(val, 16).toString();
    		decimal.setText(d);
    		octet.setText(o);
    		binary.setText(b);
    		hex.setText(val.toUpperCase());
    		
    		
    		
    		
    		
    	}catch(Exception e){}
    	
	}

	private void binarykey(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
    	String val=binary.getText();
    	generateB(val);
    }

    private void generateB(String val) {
		// TODO Auto-generated method stub
		String o,h,d;
		try{
		long tem=Long.valueOf(val, 2);
		
		decimal.setText(Long.valueOf(val, 2).toString());
		hex.setText(Long.toHexString(tem).toUpperCase());
		octet.setText(Long.toOctalString(tem));
		}catch(Exception e){}
	}

	private void octetkey(java.awt.event.KeyEvent evt) {
        // TODO add your handling code here:
    	String val=octet.getText();
    	generateO(val);
    }

	private void generateO(String val) {
		// TODO Auto-generated method stub
		try{Long tem=Long.valueOf(val, 8);
		
		decimal.setText(Long.valueOf(val, 8).toString());
		hex.setText(Long.toHexString(tem).toUpperCase());
		binary.setText(Long.toBinaryString(tem));
		}catch (Exception e) {
			// TODO: handle exception
		}
		
	}

	/**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify
    private javax.swing.JTextField binary;
    private javax.swing.JTextField decimal;
    private javax.swing.JTextField hex;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField octet;
    // End of variables declaration
}



